class Solution {
    public int numIslands(char[][] arr) {
        boolean[][]visited=new boolean[arr.length][arr[0].length];
        int count=0;
        for(int i=0;i<arr.length;i++){
            for(int j=0;j<arr[i].length;j++){
                if(arr[i][j]=='1' && visited[i][j]==false){
                    drawtreeforComponents(arr,i,j,visited);
                    count++;
                }
            }
        }
        return count;
    }
    public void drawtreeforComponents(char[][] arr,int i,int j,boolean[][]visited){
        if(i<0 || j<0 || i>=arr.length || j>=arr[0].length || arr[i][j]=='0' || visited[i][j]==true)
            return;
        visited[i][j]=true;
        drawtreeforComponents(arr,i+1,j,visited);
        drawtreeforComponents(arr,i-1,j,visited);
        drawtreeforComponents(arr,i,j+1,visited);
        drawtreeforComponents(arr,i,j-1,visited);
    }
}
