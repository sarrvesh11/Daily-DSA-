/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>>ans=new ArrayList<List<Integer>>();
        solve(root,targetSum,ans,new ArrayList<Integer>());
        return ans;
    }
    void solve(TreeNode root,int target,List<List<Integer>>ans,List<Integer>temp){
        if(root==null)
            return;
        temp.add(root.val);
        if(target==root.val && root.left==null && root.right==null)
            ans.add(new ArrayList<Integer>(temp));

        solve(root.left,target-root.val,ans,temp);
        solve(root.right,target-root.val,ans,temp);
        temp.remove(temp.size()-1);
    }
}
