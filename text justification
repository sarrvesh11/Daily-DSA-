class Solution {
    
    public List<String> fullJustify(String[] words, int maxWidth) {

        List<String> result = new ArrayList<>();
        StringBuilder sb = new StringBuilder();

        int start = 0, length = 0;
        for (int i = 0; i < words.length; i++) {
            
            if (words[i].length() <= (maxWidth - length)) {
                length += words[i].length() + 1;
                continue;
            }
            
            else {
                
                int remainingSpaces = maxWidth - length + 1;
                int noOfWords = i - start - 1;
                int extraSpaceBetweenWords = 0;

                if (noOfWords > 0) {
                    extraSpaceBetweenWords = remainingSpaces / noOfWords;
                    remainingSpaces = remainingSpaces % noOfWords;
                }

                
                while (start < i - 1) {
                    sb.append(words[start++]).append(" ");
                    int k = 0;
                    while (k < extraSpaceBetweenWords) {
                        sb.append(" ");
                        k++;
                    }
                    if (remainingSpaces > 0) {
                        sb.append(" ");
                        remainingSpaces--;
                    }
                }
                sb.append(words[start]);

                while (remainingSpaces > 0) {
                    sb.append(" ");
                    remainingSpaces--;
                }
                result.add(sb.toString());

                start = i;
                length = words[i].length() + 1;
                sb.setLength(0);
            }
        }

        sb.setLength(0);
        while (start < words.length - 1) {
            sb.append(words[start++]).append(" ");
        }
        sb.append(words[start]);

        while (sb.length() < maxWidth) {
            sb.append(" ");
        }
        result.add(sb.toString());

        return result;
    }
    
}
