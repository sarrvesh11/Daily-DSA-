class Solution
{
    stack<pair<int, int>> stk;
    int next(int price)
    {
        int cur = 1;
        while (!stk.empty() && stk.top().first >= price)
        {
            cur += stk.top().second;
            stk.pop();
        }
        stk.push({price, cur});
        return cur;
    }

public:
    int sumSubarrayMins(vector<int> &arr)
    {

        long long mod = 1000000007;
        int n = arr.size();
        if (n == 0)
            return 0;
        int res = 0;
        vector<long long> dp(n, 0);
        for (int i = 0; i < n; i++)
        {
            int cur = next(arr[i]);
            dp[i] = (cur * arr[i]) % mod;
            if (i - cur >= 0)
                dp[i] = (dp[i] + dp[i - cur]) % mod;
            res = (res + dp[i]) % mod;
        }
        return res;
    }
};
