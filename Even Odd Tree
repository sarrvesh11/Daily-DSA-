/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    bool isEvenOddTree(TreeNode* root) {
        if(root==NULL)
            return true;
        queue<TreeNode*>ans;
        bool flag=true;
        ans.push(root);

        while(!ans.empty()){
            int x=ans.size();
            int prev= flag ? INT_MIN :INT_MAX;

            for(int i=0;i<x;i++){
                TreeNode* frontnode=ans.front();
                ans.pop();
                if(flag){
                    if(frontnode->val % 2==0 || frontnode->val <=prev)
                        return false;
                }
                else{
                    if(frontnode->val %2 !=0 || frontnode->val>=prev)
                        return false;
                }

                if(frontnode->left)
                    ans.push(frontnode->left);
                if(frontnode->right)
                    ans.push(frontnode->right);

                prev=frontnode->val;
            }

            flag=!flag;
        }
        return true;
    }
};
