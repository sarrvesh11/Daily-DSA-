/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    int helper(TreeNode* root,pair<int,int>&ans,int count){
        if(root==NULL){
            return 0;
        }
        count++;
        helper(root->left,ans,count);
        if(count>ans.second){
            ans.first=root->val;
            ans.second=count;
        }
        helper(root->right,ans,count);

        return ans.first;
    }
    int findBottomLeftValue(TreeNode* root) {
        pair<int,int>ans(0,0);
        int count=0;
       return  helper(root,ans,count);
        
    }
};
