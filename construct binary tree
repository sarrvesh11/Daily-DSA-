/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private int preoidx=0;
    public TreeNode buildTree(int[] preorder, int[] inorder) {
       HashMap<Integer,Integer>map=new HashMap<>();
       int len=inorder.length;
       for(int i=0;i<len;i++){
        map.put(inorder[i],i);
       }
       return solve(preorder,map,0,len-1); 
    }
    private TreeNode solve(int[] preorder,HashMap<Integer,Integer>map,int left,int right){
        if(left>right)
            return null;
        int pval=preorder[preoidx];
        int inoidx=map.get(pval);

        TreeNode root=new TreeNode(pval);
        preoidx++;
        root.left=solve(preorder,map,left,inoidx-1);
        root.right=solve(preorder,map,inoidx+1,right);
        return root;
    }
}
