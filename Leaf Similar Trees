/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>v1,v2;
    void left(TreeNode* root1){
        if(root1==NULL)
            return;
        if(root1->left==NULL && root1->right==NULL)
            v1.push_back(root1->val);
        left(root1->left);
        left(root1->right);
    }
    void right(TreeNode* root2){
        if(root2==NULL)
            return;
        if(root2->left==NULL && root2->right==NULL)
            v2.push_back(root2->val);
        right(root2->left);
        right(root2->right);
    }
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        
        left(root1);
        right(root2);
        if(v1.size()!=v2.size())
            return false;
        for(int i=0;i<v1.size();i++){
            if(v1[i]!=v2[i])
                return false;
        }    
        return true;
    }
};
